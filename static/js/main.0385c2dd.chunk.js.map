{"version":3,"sources":["Todo.js","App.js","Time.js","index.js"],"names":["Todo","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","value","test","ex","e","setState","target","files","fileReader","FileReader","onload","ev","data","result","workbook","XLSX","read","type","persons","console","log","sheet","Sheets","hasOwnProperty","concat","utils","sheet_to_json","readAsBinaryString","headers","fileName","arguments","length","undefined","_headers","map","item","i","assign","key","title","position","String","fromCharCode","reduce","prev","next","defineProperty","v","_data","j","content","output","outputPos","keys","ref","wb","SheetNames","mySheet","!ref","!cols","wpx","writeFile","keyCode","add","_this2","react_default","a","createElement","className","for","onChange","exportExcel","bind","id","importExcel","all","index","onClick","cop","src","主图","alt","产品标题","href","来源URL","Component","App","src_Todo","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.0385c2dd.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ls from './ls'\r\nimport XLSX from 'xlsx';\r\nimport './App.css'\r\n\r\n\r\nclass Todo extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      value: '',\r\n      test: false,\r\n      ex: []\r\n\r\n    }\r\n    // this.todoChange = this.todoChange.bind(this)\r\n    // this.add = this.add.bind(this)\r\n  }\r\n  cop (e) {\r\n\r\n  }\r\n  todoChange (e) {\r\n    this.setState({\r\n      value: e.target.value\r\n    })\r\n  }\r\n  importExcel (e) {\r\n    let _this = this\r\n    var files = e.target.files\r\n    var fileReader = new FileReader();\r\n    fileReader.onload = function (ev) {\r\n      try {\r\n        var data = ev.target.result,\r\n          workbook = XLSX.read(data, { type: 'binary' }),\r\n          persons = []; // 存储获取到的数据\r\n      } catch (e) {\r\n        console.log('文件类型不正确');\r\n        return;\r\n      }\r\n\r\n      // 表格的表格范围，可用于判断表头是否数量是否正确\r\n      var fromTo = '';\r\n      // 遍历每张表读取\r\n      for (var sheet in workbook.Sheets) {\r\n        if (workbook.Sheets.hasOwnProperty(sheet)) {\r\n          fromTo = workbook.Sheets[sheet]['!ref'];\r\n          persons = persons.concat(XLSX.utils.sheet_to_json(workbook.Sheets[sheet]));\r\n          // break; // 如果只取第一张表，就取消注释这行\r\n        }\r\n      }\r\n      console.log(persons);\r\n      _this.setState({ ex: persons })\r\n    };\r\n    // 以二进制方式打开文件\r\n    fileReader.readAsBinaryString(files[0]);\r\n  }\r\n  exportExcel(headers, data, fileName = '表.xlsx') {\r\n      const _headers = headers\r\n          .map((item, i) => Object.assign({}, { key: item.key, title: item.title, position: String.fromCharCode(65 + i) + 1 }))\r\n          .reduce((prev, next) => Object.assign({}, prev, { [next.position]: { key: next.key, v: next.title } }), {});\r\n\r\n      const _data = data\r\n          .map((item, i) => headers.map((key, j) => Object.assign({}, { content: item[key.key], position: String.fromCharCode(65 + j) + (i + 2) })))\r\n          // 对刚才的结果进行降维处理（二维数组变成一维数组）\r\n          .reduce((prev, next) => prev.concat(next))\r\n          // 转换成 worksheet 需要的结构\r\n          .reduce((prev, next) => Object.assign({}, prev, { [next.position]: { v: next.content } }), {});\r\n\r\n      // 合并 headers 和 data\r\n      const output = Object.assign({}, _headers, _data);\r\n      // 获取所有单元格的位置\r\n      const outputPos = Object.keys(output);\r\n      // 计算出范围 ,[\"A1\",..., \"H2\"]\r\n      const ref = `${outputPos[0]}:${outputPos[outputPos.length - 1]}`;\r\n\r\n      // 构建 workbook 对象\r\n      const wb = {\r\n          SheetNames: ['mySheet'],\r\n          Sheets: {\r\n              mySheet: Object.assign(\r\n                  {},\r\n                  output,\r\n                  {\r\n                      '!ref': ref,\r\n                      '!cols': [{ wpx: 45 }, { wpx: 100 }, { wpx: 200 }, { wpx: 80 }, { wpx: 150 }, { wpx: 100 }, { wpx: 300 }, { wpx: 300 }],\r\n                  },\r\n              ),\r\n          },\r\n      };\r\n\r\n      // 导出 Excel\r\n      XLSX.writeFile(wb, fileName);\r\n  }\r\n  onKeyUp (e) {\r\n    if (e.keyCode === 13) {\r\n      this.add()\r\n    }\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div>\r\n        <div>\r\n          <div className=\"top\">\r\n            <div className=\"flex\">\r\n              <label for=\"excel-file\">导入</label>\r\n              <label for=\"save\">保存</label>\r\n            </div>\r\n          </div>\r\n          <input className=\"none\" onChange={this.exportExcel.bind(this)}/>\r\n          <input type=\"file\" id=\"excel-file\" onChange={this.importExcel.bind(this)} />\r\n          {/* <div onClick={this.exportExcel.bind(this)}>!!</div> */}\r\n          <ul>\r\n            {\r\n              this.state.ex.map((all, index) => {\r\n                return (\r\n                  <li\r\n                    className=\"item\"\r\n                    key={all + index}\r\n                    onClick={this.cop.bind(this, index)}\r\n                  >\r\n                    <div className=\"Ritem\">\r\n                      <img src={all.主图} alt=\"\" className=\"smg\"/>\r\n                    </div>\r\n                    <div className=\"Citem\">\r\n                      <span>{all.产品标题}</span>\r\n                      <a href={all.来源URL} target=\"_blank\">1688</a>\r\n                    </div>\r\n                    \r\n                    \r\n                  </li>\r\n                )\r\n              })\r\n            }\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Todo;","import React, { Component } from 'react';\nimport './App.css'\nimport Todo from './Todo'\nimport Time from './Time'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Todo></Todo>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React, { Component } from 'react';\r\nimport moment from 'moment/min/moment-with-locales'\r\n\r\nclass Time extends Component {\r\n  componentWillMount() {\r\n    moment.locale('fr')// 这样可以变成中文格式！可能在重新 npm install 时失效\r\n    this.setState({ \r\n      time: moment().format('LTS')\r\n    });\r\n    setInterval(() => {\r\n      this.setState({ time: moment().format('LTS')});\r\n    }, 200);\r\n\r\n    //时间跟随鼠标\r\n    document.onmousemove = (event) => {\r\n      let w = document.body.clientWidth / 40\r\n      let h = document.body.clientHeight / 40\r\n      let x = event.pageX / 20 - w\r\n      let y = event.pageY / 20 - h\r\n      this.setState({ \r\n        x:x,\r\n        y: y\r\n      });\r\n    }\r\n  }\r\n\r\n  timeModel(i) {\r\n    this.setState({ time: moment().format(i) });\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      time: moment().format('LT'),\r\n      x: 0,\r\n      y: 0,\r\n      move: true\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div \r\n        className=\"Time\"\r\n        style={this.state.move?{transform: `translate(${this.state.x}px, ${this.state.y}px)`}:{}}\r\n      >\r\n        <span className=\"default\">\r\n          {this.state.time}\r\n        </span>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Time;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}